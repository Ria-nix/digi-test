/* -------------------------------------------------------------------------- */
/*                          // Задание по JavaScript                          */
/* -------------------------------------------------------------------------- */
/* ------------------------------ // Задание #1 ----------------------------- */
// Каким будет результат следующей операции на языке JavaScript: [1, 2, 3] + [4, 5, 6]. Почему был получен такой результат?

let s = [1, 2, 3] + [4, 5, 6];
console.log(s);
// Результат:  "1,2,3" + "4,5,6" => "1,2,34,5,6"

/* ------------------------------ // Задание #2 ----------------------------- */
// Дано выражение:
var a = {b: 1};
var b = a;
b.b = 2;
console.log(a);
// Что будет выведено в консоли? Почему был получен такой результат?

// Поскольку b и a указывают на один и тот же объект, изменение свойства b фактически изменяет тот же объект, на который указывает a.
// Объект, на который указывает a, теперь выглядит как { b: 2 }, потому что свойство b этого объекта было изменено через переменную b.
// Результат: { b: 2 }

/* ------------------------------ // Задание #3 ----------------------------- */
// Написать регулярное выражение, совпадающее с числом с плавающей точкой с точностью до 3 знака после запятой.
// Регулярное выражение: 
^-?\d+(\.\d{1,3})?$

/* ------------------------------ // Задание #4 ----------------------------- */
// Написать регулярное выражение, по которому определяется является ли строка ссылкой. Объяснить, как оно работает.
// Пример:
const isURL = str => true
isURL(‘https://example.com’)
isURL(‘http://www.example.com’)


// Регулярное выражение: 
/^(https?:\/\/)?(www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_\+.~#?&//=]*)$/
// (https?:\/\/)? — необязательный протокол http или https
// (www\.)? — необязательная часть www
// [-a-zA-Z0-9@:%._\+~#=]{1,256} — основной домен
// \. — точка, отделяющая домен верхнего уровня
// [a-zA-Z0-9()]{1,6} — домен верхнего уровня
// \b — граница слова, чтобы избежать захвата частичных доменов
// ([-a-zA-Z0-9()@:%_\+.~#?&//=]*) — остальная часть URL

/* ------------------------------ // Задание #5 ----------------------------- */
// Каким будет значение переменной text после выполнения данного JavaScript кода? 
function setText(message) { 
    text = message; 
}
var text = 'Текст';
setText('Сообщение');
// Опишите, почему получился такой результат.

// Функция setText вызывается с аргументом 'Сообщение', где внутри функции значение параметра message равно 'Сообщение'
// Затем это значение присваивается переменной text
text = message;
// Здесь происходит присваивание значения 'Сообщение' переменной text. Тогда переменная text была объявлена в глобальной области видимости (с помощью var), присваивание внутри функции изменяет переменную text.
// Таким образом, после вызова функции setText('Сообщение'), значение переменной text становится 'Сообщение'.
// Ответ: значение переменной text будет 'Сообщение' из-за присваивания в функции setText

/* ------------------------------ // Задание #6 ----------------------------- */
// Написать функцию для получения список всех артикулов товаров в консоли браузера на странице 
// https://groupprice.ru/categories/jenskaya-odejda?referer_from=main_catalog

function getArticles(){
    return Array.from(document.querySelectorAll('._product')).map(el => el.dataset.id);
}

/* ------------------------------ // Задание #7 ----------------------------- */
// Написать функцию для получения всех характеристики товара в консоли браузера в виде объекта в формате attributeName: value на странице
//  https://nir-vanna.ru/product/smesitel-bravat-art-f175109c-dlya-rakoviny/


let obj = {}
let tabs = document.querySelectorAll('.tab-pane-product-parameter-item');
tabs.forEach(elem => {
    let children = elem.querySelector('.t-w');
    if(children){
        children.remove();
    }
    let name = elem.querySelector('.parameter-name').innerHTML.trim();
    let value = elem.querySelector('.parameter-value').textContent.trim();

    obj[name] = value;
    console.log(obj)
});